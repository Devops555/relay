==================================== INPUT ====================================
query FooQuery($id: ID!) {
  client_root_field

  node(id: $id) {
    id
  }
}

mutation FooMutation($input: UnfriendInput) {
  client_root_field
  unfriend(input: $input) {
    clientMutationId
  }
}

subscription FooSubscription($input: FeedbackLikeInput) {
  client_root_field
  feedbackLikeSubscribe(input: $input) {
    clientSubscriptionId
  }
}

# %extensions%

extend type Query {
  client_root_field: String
}

extend type Mutation {
  client_root_field: String
}

extend type Subscription {
  client_root_field: String
}
==================================== OUTPUT ===================================
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "FooMutation",
    "type": "Mutation",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "input",
        "type": "UnfriendInput",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "unfriend",
        "args": [
          {
            "kind": "Variable",
            "name": "input",
            "variableName": "input"
          }
        ],
        "concreteType": "UnfriendResponsePayload",
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "clientMutationId",
            "args": null,
            "storageKey": null
          }
        ],
        "storageKey": null
      },
      {
        "kind": "ClientExtension",
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "client_root_field",
            "args": null,
            "storageKey": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "FooMutation",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "input",
        "type": "UnfriendInput",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "unfriend",
        "args": [
          {
            "kind": "Variable",
            "name": "input",
            "variableName": "input"
          }
        ],
        "concreteType": "UnfriendResponsePayload",
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "clientMutationId",
            "args": null,
            "storageKey": null
          }
        ],
        "storageKey": null
      },
      {
        "kind": "ClientExtension",
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "client_root_field",
            "args": null,
            "storageKey": null
          }
        ]
      }
    ]
  },
  "params": {
    "id": null,
    "metadata": {},
    "name": "FooMutation",
    "operationKind": "mutation",
    "text": null
  }
}

QUERY:

mutation FooMutation(
  $input: UnfriendInput
) {
  unfriend(input: $input) {
    clientMutationId
  }
}

{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "FooQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          }
        ],
        "storageKey": null
      },
      {
        "kind": "ClientExtension",
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "client_root_field",
            "args": null,
            "storageKey": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "FooQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          }
        ],
        "storageKey": null
      },
      {
        "kind": "ClientExtension",
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "client_root_field",
            "args": null,
            "storageKey": null
          }
        ]
      }
    ]
  },
  "params": {
    "id": null,
    "metadata": {},
    "name": "FooQuery",
    "operationKind": "query",
    "text": null
  }
}

QUERY:

query FooQuery(
  $id: ID!
) {
  node(id: $id) {
    __typename
    id
  }
}

{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "FooSubscription",
    "type": "Subscription",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "input",
        "type": "FeedbackLikeInput",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "feedbackLikeSubscribe",
        "args": [
          {
            "kind": "Variable",
            "name": "input",
            "variableName": "input"
          }
        ],
        "concreteType": "FeedbackLikeResponsePayload",
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "clientSubscriptionId",
            "args": null,
            "storageKey": null
          }
        ],
        "storageKey": null
      },
      {
        "kind": "ClientExtension",
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "client_root_field",
            "args": null,
            "storageKey": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "FooSubscription",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "input",
        "type": "FeedbackLikeInput",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "feedbackLikeSubscribe",
        "args": [
          {
            "kind": "Variable",
            "name": "input",
            "variableName": "input"
          }
        ],
        "concreteType": "FeedbackLikeResponsePayload",
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "clientSubscriptionId",
            "args": null,
            "storageKey": null
          }
        ],
        "storageKey": null
      },
      {
        "kind": "ClientExtension",
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "client_root_field",
            "args": null,
            "storageKey": null
          }
        ]
      }
    ]
  },
  "params": {
    "id": null,
    "metadata": {},
    "name": "FooSubscription",
    "operationKind": "subscription",
    "text": null
  }
}

QUERY:

subscription FooSubscription(
  $input: FeedbackLikeInput
) {
  feedbackLikeSubscribe(input: $input) {
    clientSubscriptionId
  }
}
