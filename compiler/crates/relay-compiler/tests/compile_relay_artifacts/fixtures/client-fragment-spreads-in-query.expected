==================================== INPUT ====================================
query FooQuery($id: ID!) {
  node(id: $id) {
    ...Foo_user
  }
}

fragment Foo_user on User {
  id
  foo {
    ...ClientTypeFragment
  }
}

fragment ClientTypeFragment on ClientType {
  client_field
}

# %extensions%

extend type User {
  foo: ClientType
}

type ClientType {
  client_field: String
}
==================================== OUTPUT ===================================
{
  "kind": "Fragment",
  "name": "ClientTypeFragment",
  "type": "ClientType",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "client_field",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "Foo_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "kind": "LinkedField",
          "alias": null,
          "name": "foo",
          "args": null,
          "concreteType": "ClientType",
          "plural": false,
          "selections": [
            {
              "kind": "FragmentSpread",
              "name": "ClientTypeFragment",
              "args": null
            }
          ],
          "storageKey": null
        }
      ]
    },
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    }
  ]
}

{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "FooQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "Foo_user",
            "args": null
          }
        ],
        "storageKey": null
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "FooQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "ClientExtension",
                "selections": [
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "foo",
                    "args": null,
                    "concreteType": "ClientType",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "client_field",
                        "args": null,
                        "storageKey": null
                      }
                    ],
                    "storageKey": null
                  }
                ]
              }
            ]
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          }
        ],
        "storageKey": null
      }
    ]
  },
  "params": {
    "id": null,
    "metadata": {},
    "name": "FooQuery",
    "operationKind": "query",
    "text": null
  }
}

QUERY:

query FooQuery(
  $id: ID!
) {
  node(id: $id) {
    ...Foo_user
    __typename
    id
  }
}

fragment Foo_user on User {
  id
}
