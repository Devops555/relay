==================================== INPUT ====================================
query FooNameRendererQuery($id: ID!) {
  node(id: $id) {
    ...FooNameRendererFragment
  }
}

fragment FooNameRendererFragment on User {
  id
  nameRenderer {
    ...MarkdownUserNameRenderer_name
      @module(name: "MarkdownUserNameRenderer.react")
    ...PlainUserNameRenderer_name @module(name: "PlainUserNameRenderer.react")
  }
}

query BarNameRendererQuery($id: ID!) {
  node(id: $id) {
    ...BarNameRendererFragment
  }
}

fragment BarNameRendererFragment on User {
  # same field alias as above and using standalone @module, so this should
  # flatten with the above selections even though the supported types are
  # different
  nameRenderer {
    ...MarkdownUserNameRenderer_name
      @module(name: "MarkdownUserNameRenderer.react")
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
  }
}
==================================== OUTPUT ===================================
{
  "kind": "Fragment",
  "name": "BarNameRendererFragment",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "nameRenderer",
      "args": null,
      "concreteType": null,
      "plural": false,
      "selections": [
        {
          "kind": "FragmentSpread",
          "name": "MarkdownUserNameRenderer_name",
          "args": null
        }
      ],
      "storageKey": null
    }
  ]
}

{
  "kind": "Fragment",
  "name": "FooNameRendererFragment",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "nameRenderer",
      "args": null,
      "concreteType": null,
      "plural": false,
      "selections": [
        {
          "kind": "FragmentSpread",
          "name": "MarkdownUserNameRenderer_name",
          "args": null
        },
        {
          "kind": "FragmentSpread",
          "name": "PlainUserNameRenderer_name",
          "args": null
        }
      ],
      "storageKey": null
    }
  ]
}

{
  "kind": "Fragment",
  "name": "MarkdownUserNameRenderer_name",
  "type": "MarkdownUserNameRenderer",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "markdown",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "args": null,
      "concreteType": "MarkdownUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "markup",
          "args": null,
          "storageKey": null
        }
      ],
      "storageKey": null
    }
  ]
}

{
  "kind": "Fragment",
  "name": "PlainUserNameRenderer_name",
  "type": "PlainUserNameRenderer",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "plaintext",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "args": null,
      "concreteType": "PlainUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "text",
          "args": null,
          "storageKey": null
        }
      ],
      "storageKey": null
    }
  ]
}

{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "BarNameRendererQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "BarNameRendererFragment",
            "args": null
          }
        ],
        "storageKey": null
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "BarNameRendererQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "nameRenderer",
                "args": null,
                "concreteType": null,
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "__typename",
                    "args": null,
                    "storageKey": null
                  },
                  {
                    "kind": "InlineFragment",
                    "type": "MarkdownUserNameRenderer",
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "markdown",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "data",
                        "args": null,
                        "concreteType": "MarkdownUserNameData",
                        "plural": false,
                        "selections": [
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "markup",
                            "args": null,
                            "storageKey": null
                          },
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "id",
                            "args": null,
                            "storageKey": null
                          }
                        ],
                        "storageKey": null
                      }
                    ]
                  }
                ],
                "storageKey": null
              }
            ]
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          }
        ],
        "storageKey": null
      }
    ]
  },
  "params": {
    "id": null,
    "metadata": {},
    "name": "BarNameRendererQuery",
    "operationKind": "query",
    "text": null
  }
}

QUERY:

query BarNameRendererQuery(
  $id: ID!
) {
  node(id: $id) {
    __typename
    ...BarNameRendererFragment
    id
  }
}

fragment BarNameRendererFragment on User {
  nameRenderer {
    __typename
    ...MarkdownUserNameRenderer_name @module(name: "MarkdownUserNameRenderer.react")
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
    id
  }
}

{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "FooNameRendererQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "FooNameRendererFragment",
            "args": null
          }
        ],
        "storageKey": null
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "FooNameRendererQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "nameRenderer",
                "args": null,
                "concreteType": null,
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "__typename",
                    "args": null,
                    "storageKey": null
                  },
                  {
                    "kind": "InlineFragment",
                    "type": "MarkdownUserNameRenderer",
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "markdown",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "data",
                        "args": null,
                        "concreteType": "MarkdownUserNameData",
                        "plural": false,
                        "selections": [
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "markup",
                            "args": null,
                            "storageKey": null
                          },
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "id",
                            "args": null,
                            "storageKey": null
                          }
                        ],
                        "storageKey": null
                      }
                    ]
                  },
                  {
                    "kind": "InlineFragment",
                    "type": "PlainUserNameRenderer",
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "plaintext",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "data",
                        "args": null,
                        "concreteType": "PlainUserNameData",
                        "plural": false,
                        "selections": [
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "text",
                            "args": null,
                            "storageKey": null
                          },
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "id",
                            "args": null,
                            "storageKey": null
                          }
                        ],
                        "storageKey": null
                      }
                    ]
                  }
                ],
                "storageKey": null
              }
            ]
          }
        ],
        "storageKey": null
      }
    ]
  },
  "params": {
    "id": null,
    "metadata": {},
    "name": "FooNameRendererQuery",
    "operationKind": "query",
    "text": null
  }
}

QUERY:

query FooNameRendererQuery(
  $id: ID!
) {
  node(id: $id) {
    __typename
    ...FooNameRendererFragment
    id
  }
}

fragment FooNameRendererFragment on User {
  id
  nameRenderer {
    __typename
    ...MarkdownUserNameRenderer_name @module(name: "MarkdownUserNameRenderer.react")
    ...PlainUserNameRenderer_name @module(name: "PlainUserNameRenderer.react")
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
    id
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
    id
  }
}
