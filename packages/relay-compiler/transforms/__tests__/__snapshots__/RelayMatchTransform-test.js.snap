// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RelayMatchTransform matches expected output: invalid-match-type.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment CommentBody_comment on Comment {
  commentBody @match {
    ...MarkdownBody_comment @module(name: "MarkdownBodyComponent.react")
    ...User_comment @module(name: "User.react")
  }
}

fragment MarkdownBody_comment on MarkdownCommentBody {
  __typename
}

fragment User_comment on User {
  __typename
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: RelayMatchTransform: Unsupported type 'User' in the list of matches in the @match. Type "User" does not belong to the union "CommentBody".
`;

exports[`RelayMatchTransform matches expected output: invalid-no-matches.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment CommentBody_comment on Comment {
  commentBody @match
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: GraphQLParser: Expected at least one selection for non-scalar field \`commentBody\` on type \`CommentBody\`. Source: document \`CommentBody_comment\` file: \`GraphQL request\`.
`;

exports[`RelayMatchTransform matches expected output: invalid-non-empty-selections.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment CommentBody_comment on Comment {
  commentBody @match {
    __typename
    ...MarkdownBody_comment @module(name: "MarkdownBodyComponent.react")
    ...PlaintextBody_comment @module(name: "PlaintextComponent.react")
  }
}

fragment MarkdownBody_comment on MarkdownCommentBody {
  __typename
}

fragment PlaintextBody_comment on PlainCommentBody {
  __typename
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: RelayMatchTransform: all selections in a @match field should be fragment spreads, got 'ScalarField'.
`;

exports[`RelayMatchTransform matches expected output: relay-match-transform.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment CommentBody_comment on Comment {
  commentBody @match {
    ...MarkdownBody_comment @module(name: "MarkdownBodyComponent.react")
    ...PlaintextBody_comment @module(name: "PlaintextComponent.react")
  }
}

fragment MarkdownBody_comment on MarkdownCommentBody {
  __typename
}

fragment PlaintextBody_comment on PlainCommentBody {
  __typename
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
fragment CommentBody_comment on Comment {
  commentBody(supported: ["MarkdownCommentBody", "PlainCommentBody"]) {
    ...MarkdownBody_comment
    ...PlaintextBody_comment
  }
}

fragment MarkdownBody_comment on MarkdownCommentBody {
  __typename
}

fragment PlaintextBody_comment on PlainCommentBody {
  __typename
}

`;
