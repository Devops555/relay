// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`compileRelayArtifacts (ClientExtension transforms enabled) matches expected output: client-conditions.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment Foo_user on User {
  id
  name @include(if: $shouldInclude)

  client_nickname @include(if: $shouldInclude)

  ... on ClientNamed @include(if: $shouldInclude) {
    client_name
    client_name_2
  }

  ... on Actor @include(if: $shouldInclude) {
    client_actor_field
    address {
      city
      client_street_address_field(arg: $arg) # nested client field
    }
  }
}

extend type User {
  client_nickname: String
  client_actor_field: String
}

extend type StreetAddress {
  client_street_address_field(arg: String): String
}

extend interface Actor {
  client_actor_field: String
}

extend type Page {
  client_actor_field: String
}

interface ClientNamed {
  client_name: String
  client_name_2: String
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Fragment",
  "name": "Foo_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "shouldInclude",
      "type": "Boolean!"
    },
    {
      "kind": "RootArgument",
      "name": "arg",
      "type": "String"
    }
  ],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "Condition",
      "passingValue": true,
      "condition": "shouldInclude",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "name",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "LinkedField",
          "alias": null,
          "name": "address",
          "storageKey": null,
          "args": null,
          "concreteType": "StreetAddress",
          "plural": false,
          "selections": [
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "city",
              "args": null,
              "storageKey": null
            },
            {
              "kind": "ClientExtension",
              "selections": [
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "client_street_address_field",
                  "args": [
                    {
                      "kind": "Variable",
                      "name": "arg",
                      "variableName": "arg"
                    }
                  ],
                  "storageKey": null
                }
              ]
            }
          ]
        },
        {
          "kind": "ClientExtension",
          "selections": [
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "client_nickname",
              "args": null,
              "storageKey": null
            },
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "client_name",
              "args": null,
              "storageKey": null
            },
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "client_name_2",
              "args": null,
              "storageKey": null
            },
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "client_actor_field",
              "args": null,
              "storageKey": null
            }
          ]
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts (ClientExtension transforms enabled) matches expected output: client-fields-in-inline-fragments.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment Foo_user on User {
  id

  ... on Actor {
    client_actor_field
    address {
      city
      client_street_address_field(arg: $arg) # nested client field
    }
  }
}

extend type StreetAddress {
  client_street_address_field(arg: String): String
}

extend type User {
  client_actor_field: String
}

extend interface Actor {
  client_actor_field: String
}

extend type Page {
  client_actor_field: String
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Fragment",
  "name": "Foo_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "arg",
      "type": "String"
    }
  ],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "address",
      "storageKey": null,
      "args": null,
      "concreteType": "StreetAddress",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "city",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ClientExtension",
          "selections": [
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "client_street_address_field",
              "args": [
                {
                  "kind": "Variable",
                  "name": "arg",
                  "variableName": "arg"
                }
              ],
              "storageKey": null
            }
          ]
        }
      ]
    },
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "client_actor_field",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts (ClientExtension transforms enabled) matches expected output: client-fields-of-client-type.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment Foo_user on User {
  id

  client_foo {
    client_name
    profile_picture(scale: 2) {
      uri
    }
  }
}

extend type User {
  client_foo: Foo
}

type Foo {
  client_name: String
  profile_picture(scale: Float): Image
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Fragment",
  "name": "Foo_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "kind": "LinkedField",
          "alias": null,
          "name": "client_foo",
          "storageKey": null,
          "args": null,
          "concreteType": "Foo",
          "plural": false,
          "selections": [
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "client_name",
              "args": null,
              "storageKey": null
            },
            {
              "kind": "LinkedField",
              "alias": null,
              "name": "profile_picture",
              "storageKey": "profile_picture(scale:2)",
              "args": [
                {
                  "kind": "Literal",
                  "name": "scale",
                  "value": 2
                }
              ],
              "concreteType": "Image",
              "plural": false,
              "selections": [
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "uri",
                  "args": null,
                  "storageKey": null
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts (ClientExtension transforms enabled) matches expected output: client-fields-on-roots.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query FooQuery($id: ID!, $arg: String) {
  client_root_field

  node(id: $id) {
    id
  }
}

mutation FooMutation {
  client_root_field
}

subscription FooSubscription {
  client_root_field
}

extend type Query {
  client_root_field: String
}

extend type Mutation {
  client_root_field: String
}

extend type Subscription {
  client_root_field: String
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "FooQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "arg",
        "type": "String",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          }
        ]
      },
      {
        "kind": "ClientExtension",
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "client_root_field",
            "args": null,
            "storageKey": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "FooQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "arg",
        "type": "String",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          }
        ]
      },
      {
        "kind": "ClientExtension",
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "client_root_field",
            "args": null,
            "storageKey": null
          }
        ]
      }
    ]
  }
}

QUERY:

query FooQuery(
  $id: ID!
) {
  node(id: $id) {
    __typename
    id
  }
}


{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "FooMutation",
    "type": "Mutation",
    "metadata": null,
    "argumentDefinitions": [],
    "selections": [
      {
        "kind": "ClientExtension",
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "client_root_field",
            "args": null,
            "storageKey": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "FooMutation",
    "argumentDefinitions": [],
    "selections": [
      {
        "kind": "ClientExtension",
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "client_root_field",
            "args": null,
            "storageKey": null
          }
        ]
      }
    ]
  }
}

QUERY:

mutation FooMutation


{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "FooSubscription",
    "type": "Subscription",
    "metadata": null,
    "argumentDefinitions": [],
    "selections": [
      {
        "kind": "ClientExtension",
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "client_root_field",
            "args": null,
            "storageKey": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "FooSubscription",
    "argumentDefinitions": [],
    "selections": [
      {
        "kind": "ClientExtension",
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "client_root_field",
            "args": null,
            "storageKey": null
          }
        ]
      }
    ]
  }
}

QUERY:

subscription FooSubscription

`;

exports[`compileRelayArtifacts (ClientExtension transforms enabled) matches expected output: client-fragment-spreads.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment Foo_user on User {
  id

  ...ClientTypeFragment # include fragment on client-only type
}

fragment ClientTypeFragment on ClientType {
  client_field
}

type ClientType {
  client_field: String
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Fragment",
  "name": "Foo_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "kind": "FragmentSpread",
          "name": "ClientTypeFragment",
          "args": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "ClientTypeFragment",
  "type": "ClientType",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "client_field",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts (ClientExtension transforms enabled) matches expected output: client-inline-fragments.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment Foo_user on User {
  id

  ... on ClientNamed {
    client_name
  }
}

interface ClientNamed {
  client_name: String
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Fragment",
  "name": "Foo_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "kind": "InlineFragment",
          "type": "ClientNamed",
          "selections": [
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "client_name",
              "args": null,
              "storageKey": null
            }
          ]
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts (ClientExtension transforms enabled) matches expected output: client-linked-fields.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment Foo_user on User {
  id

  client_friends {
    edges {
      client_friend_edge_field # nested client field, should not create new ClientExtension node
      node {
        id
      }
    }
    pageInfo {
      hasNextPage
    }
  }
}

extend type User {
  client_friends: FriendsConnection
}

extend type FriendsEdge {
  client_friend_edge_field: String
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Fragment",
  "name": "Foo_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "kind": "LinkedField",
          "alias": null,
          "name": "client_friends",
          "storageKey": null,
          "args": null,
          "concreteType": "FriendsConnection",
          "plural": false,
          "selections": [
            {
              "kind": "LinkedField",
              "alias": null,
              "name": "edges",
              "storageKey": null,
              "args": null,
              "concreteType": "FriendsEdge",
              "plural": true,
              "selections": [
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "client_friend_edge_field",
                  "args": null,
                  "storageKey": null
                },
                {
                  "kind": "LinkedField",
                  "alias": null,
                  "name": "node",
                  "storageKey": null,
                  "args": null,
                  "concreteType": "User",
                  "plural": false,
                  "selections": [
                    {
                      "kind": "ScalarField",
                      "alias": null,
                      "name": "id",
                      "args": null,
                      "storageKey": null
                    }
                  ]
                }
              ]
            },
            {
              "kind": "LinkedField",
              "alias": null,
              "name": "pageInfo",
              "storageKey": null,
              "args": null,
              "concreteType": "PageInfo",
              "plural": false,
              "selections": [
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "hasNextPage",
                  "args": null,
                  "storageKey": null
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts (ClientExtension transforms enabled) matches expected output: client-scalar-fields.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment Foo_user on User {
  id

  client_nickname # client field
  friends {
    count
    client_friends_connection_field # nested client field
  }
}

extend type User {
  client_nickname: String
}

extend type FriendsConnection {
  client_friends_connection_field: String
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Fragment",
  "name": "Foo_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "friends",
      "storageKey": null,
      "args": null,
      "concreteType": "FriendsConnection",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "count",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ClientExtension",
          "selections": [
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "client_friends_connection_field",
              "args": null,
              "storageKey": null
            }
          ]
        }
      ]
    },
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "client_nickname",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts (ClientExtension transforms enabled) matches expected output: original-client-fields-test.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query BestFriendsQuery($id: ID!) {
  node(id: $id) {
    ...BestFriends
    ...OnlyClientFields
  }
}

# This fragment disappears because all selections are removed
fragment OnlyClientFields on User {
  best_friends {
    __typename
  }
}

fragment BestFriends on User {
  # this is the only field that is part of the base schema
  ...NodeFragment
  # fields defined in type extensions are skipped
  best_friends {
    edges {
      cursor
      node {
        id
      }
    }
    pageInfo {
      hasNextPage
    }
  }
  ... on Named {
    # fragments on extension types are skipped
    ...FooFragment
    ... on Foo {
      name
    }
  }
}

fragment NodeFragment on Node {
  id
}

fragment FooFragment on Foo {
  name
}

extend type User {
  best_friends: FriendsConnection
}

type Foo implements Named {
  name: String
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "BestFriendsQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "BestFriends",
            "args": null
          },
          {
            "kind": "FragmentSpread",
            "name": "OnlyClientFields",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "BestFriendsQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "ClientExtension",
                "selections": [
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "best_friends",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "FriendsConnection",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "edges",
                        "storageKey": null,
                        "args": null,
                        "concreteType": "FriendsEdge",
                        "plural": true,
                        "selections": [
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "cursor",
                            "args": null,
                            "storageKey": null
                          },
                          {
                            "kind": "LinkedField",
                            "alias": null,
                            "name": "node",
                            "storageKey": null,
                            "args": null,
                            "concreteType": "User",
                            "plural": false,
                            "selections": [
                              {
                                "kind": "ScalarField",
                                "alias": null,
                                "name": "id",
                                "args": null,
                                "storageKey": null
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "pageInfo",
                        "storageKey": null,
                        "args": null,
                        "concreteType": "PageInfo",
                        "plural": false,
                        "selections": [
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "hasNextPage",
                            "args": null,
                            "storageKey": null
                          }
                        ]
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "__typename",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  },
                  {
                    "kind": "InlineFragment",
                    "type": "Foo",
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "name",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ClientExtension",
                        "selections": [
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "name",
                            "args": null,
                            "storageKey": null
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query BestFriendsQuery(
  $id: ID!
) {
  node(id: $id) {
    __typename
    ...BestFriends
    ...OnlyClientFields
    id
  }
}

fragment BestFriends on User {
  ...NodeFragment
}

fragment OnlyClientFields on User

fragment NodeFragment on Node {
  id
}


{
  "kind": "Fragment",
  "name": "OnlyClientFields",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "kind": "LinkedField",
          "alias": null,
          "name": "best_friends",
          "storageKey": null,
          "args": null,
          "concreteType": "FriendsConnection",
          "plural": false,
          "selections": [
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "__typename",
              "args": null,
              "storageKey": null
            }
          ]
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "BestFriends",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "FragmentSpread",
      "name": "NodeFragment",
      "args": null
    },
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "kind": "LinkedField",
          "alias": null,
          "name": "best_friends",
          "storageKey": null,
          "args": null,
          "concreteType": "FriendsConnection",
          "plural": false,
          "selections": [
            {
              "kind": "LinkedField",
              "alias": null,
              "name": "edges",
              "storageKey": null,
              "args": null,
              "concreteType": "FriendsEdge",
              "plural": true,
              "selections": [
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "cursor",
                  "args": null,
                  "storageKey": null
                },
                {
                  "kind": "LinkedField",
                  "alias": null,
                  "name": "node",
                  "storageKey": null,
                  "args": null,
                  "concreteType": "User",
                  "plural": false,
                  "selections": [
                    {
                      "kind": "ScalarField",
                      "alias": null,
                      "name": "id",
                      "args": null,
                      "storageKey": null
                    }
                  ]
                }
              ]
            },
            {
              "kind": "LinkedField",
              "alias": null,
              "name": "pageInfo",
              "storageKey": null,
              "args": null,
              "concreteType": "PageInfo",
              "plural": false,
              "selections": [
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "hasNextPage",
                  "args": null,
                  "storageKey": null
                }
              ]
            }
          ]
        },
        {
          "kind": "FragmentSpread",
          "name": "FooFragment",
          "args": null
        },
        {
          "kind": "InlineFragment",
          "type": "Foo",
          "selections": [
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "name",
              "args": null,
              "storageKey": null
            }
          ]
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "NodeFragment",
  "type": "Node",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    }
  ]
}

{
  "kind": "Fragment",
  "name": "FooFragment",
  "type": "Foo",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "name",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts (ClientExtension transforms enabled) matches expected output: sibling-client-selections.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment Foo_user on User {
  id
  name

  # Different types of client selections should be grouped under single
  # ClientExtension node:
  client_nickname
  client_foo {
    client_name
  }
  client_friends {
    edges {
      client_friend_edge_field # nested client field, should not create new ClientExtension node
      node {
        id
      }
    }
  }
  ... on ClientNamed {
    client_name
  }
  ...ClientTypeFragment # include fragment on client-only type
}

fragment ClientTypeFragment on ClientType {
  client_field
}

extend type User {
  client_friends: FriendsConnection
  client_nickname: String
  client_foo: Foo
}

extend type FriendsEdge {
  client_friend_edge_field: String
}

type ClientType {
  client_field: String
}

type Foo {
  client_name: String
}

interface ClientNamed {
  client_name: String
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Fragment",
  "name": "Foo_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "name",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "client_nickname",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "LinkedField",
          "alias": null,
          "name": "client_foo",
          "storageKey": null,
          "args": null,
          "concreteType": "Foo",
          "plural": false,
          "selections": [
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "client_name",
              "args": null,
              "storageKey": null
            }
          ]
        },
        {
          "kind": "LinkedField",
          "alias": null,
          "name": "client_friends",
          "storageKey": null,
          "args": null,
          "concreteType": "FriendsConnection",
          "plural": false,
          "selections": [
            {
              "kind": "LinkedField",
              "alias": null,
              "name": "edges",
              "storageKey": null,
              "args": null,
              "concreteType": "FriendsEdge",
              "plural": true,
              "selections": [
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "client_friend_edge_field",
                  "args": null,
                  "storageKey": null
                },
                {
                  "kind": "LinkedField",
                  "alias": null,
                  "name": "node",
                  "storageKey": null,
                  "args": null,
                  "concreteType": "User",
                  "plural": false,
                  "selections": [
                    {
                      "kind": "ScalarField",
                      "alias": null,
                      "name": "id",
                      "args": null,
                      "storageKey": null
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "kind": "InlineFragment",
          "type": "ClientNamed",
          "selections": [
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "client_name",
              "args": null,
              "storageKey": null
            }
          ]
        },
        {
          "kind": "FragmentSpread",
          "name": "ClientTypeFragment",
          "args": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "ClientTypeFragment",
  "type": "ClientType",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "client_field",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;
